name: Import to crowdin

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository name'
        required: false
      update:
        description: 'true to update preexisting sources, false to add them from scratch'
        type: boolean
        required: false

  workflow_call:
    inputs:
      repo:
        description: 'Repository name'
        type: 'string'
        required: true
      update:
        description: 'true to update preexisting sources, false to add them from scratch'
        type: boolean
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout add-on
        uses: actions/checkout@v5
        with:
          repository: nvdaaddons/${{ inputs.repo }}
          fetch-depth: 0
          ref: stable
          submodules: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scons markdown
          sudo apt update
          sudo apt install gettext
      - name: Build add-on and pot file
        run: |
          scons
          scons pot
      - name: Create dir for repo
        run: |
          if [ -d "addon-${{ inputs.repo }}" ]; then
          echo "Warning: Folder already exists."
          else
          mkdir addon-${{ inputs.repo }}
          fi
          mv ${{ inputs.repo }}.pot addon-${{ inputs.repo }} -f
          mv readme.md addon-${{ inputs.repo }} -f
          cd addon-${{ inputs.repo }}
          mv readme.md addon-${{ inputs.repo }}/${{ inputs.repo}}.md -f
      - name: Upload add-on
        uses: actions/upload-artifact@v4
        with:
          name: addon
          overwrite: true
          path: addon-${{ inputs.repo }}
  importToCrowdin:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v5
      - name: Create dir for repo
        run: |
          if [ -d "${{ inputs.repo }}" ]; then
          echo "Warning: Folder already exists."
          else
          mkdir ${{ inputs.repo }}
          fi
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          path: ${{ inputs.repo }}
      - name: "Set up Python"
        uses: actions/setup-python@v6
        with:
          python-version-file: ".python-version"
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
      - name: Generate xliff
        if: ${{ !inputs.update }}
        run: |
          uv run ./utils/markdownTranslate.py generateXliff -m ${{ inputs.repo }}/${{ inputs.repo }}.md -o ${{ inputs.repo }}/${{ inputs.repo }}.xliff
      - name: update xliff
        if: ${{ inputs.update }}
        run: |
          uv run ./utils/markdownTranslate.py updateXliff -x ${{ inputs.repo }}/${{ inputs.repo }}.xliff -m ${{ inputs.repo }}/${{ inputs.repo }}.md -o ${{ inputs.repo }}.xliff.temp
          mv ${{ inputs.repo}}.xliff.temp ${{ inputs.repo }}/${{ inputs.repo }}.xliff          
      - name: Commit add-on
        id: commitAddon
        run: |
          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
          git add ${{ inputs.repo }}
          if git diff --staged --quiet; then
          echo "Nothing added to commit."
          echo "has_changes=false" >> $GITHUB_OUTPUT
          else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          git commit -m "Update sources"
          git branch -u origin/main
          git pull --rebase
          git push
          fi

      - name: Upload to Crowdin
        if: ${{ !inputs.update }}
        run: |
          uv run ./utils/l10nUtil.py uploadSourceFile --localFilePath=${{ inputs.repo}}/${{ inputs.repo}}.xliff
          uv run ./utils/l10nUtil.py uploadSourceFile --localFilePath=${{ inputs.repo}}/${{ inputs.repo}}.pot
        env:
          crowdinProjectID: ${{ vars.CROWDIN_ID }}
          crowdinAuthToken: ${{ secrets.CROWDIN_TOKEN }}
      - name: Update sources
        if: ${{ inputs.update }}
        run: |
          uv run ./utils/crowdinSync.py uploadSourceFile ${{inputs.repo }}/${{ inputs.repo }}.pot
          uv run ./utils/crowdinSync.py uploadSourceFile ${{ inputs.repo }}/${{ inputs.repo }}.xliff
        env:
          crowdinProjectID: ${{ vars.CROWDIN_ID }}
          crowdinAuthToken: ${{ secrets.CROWDIN_TOKEN }}
      - name: Commit and push json file
        id: commit
        run: |
          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
          git status
          git add utils
          if git diff --staged --quiet; then
          echo "Nothing added to commit."
          echo "has_changes=false" >> $GITHUB_OUTPUT
          else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          git commit -m "Update Crowdin file ids"
          git push
          fi
