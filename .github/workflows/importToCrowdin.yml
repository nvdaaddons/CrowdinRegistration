name: Import to crowdin

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository name'
env:
  repo: ${{ github.event.inputs.repo }}
jobs:
  importToCrowdin:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install scons markdown
          sudo apt update
          sudo apt install gettext
          sudo apt install translate-toolkit
      - name: Checkout add-on
        uses: actions/checkout@v4
        with:
          repository: nvdaaddons/$repo
          path: ${{ github.event.inputs.repo }}
      - name: Create add-on
        run: |
          cd ${{ github.event.inputs.repo }}
          scons
      - name: Create pot "file
        run: |
          cd ${{ github.event.inputs.repo }}
          scons pot
      - name: Convert markdown to pot
        run: md2po -P ${{ github.event.inputs.repo }}/readme.md ${{ github.event.inputs.repo }}
      - name: Move locale to add-on repo folder
        run: |
          if [ -d "${{ github.event.inputs.repo }}/addon/locale" ]; then
          mv ${{  github.event.inputs.repo }}/addon/locale ${{ github.event.inputs.repo }}/locale
                    else
          echo "Warning: Folder ${{  github.event.inputs.repo }}/addon/locale does not exist."
          fi
      - name: Move translated doc to add-on repo folder
        run: |
          cd ${{ github.event.inputs.repo }}
          mkdir doc
          cd doc
          for file in "${{ github.workspace }}/addons/${{ github.event.inputs.repo }}.*.po"; do
          lang = $(echo "$file" | sed "s/^${repo}\.\(.*\)\.po$/\1/") echo "$lang" 
          mkdir $lang
          mv "$file" "$lang"
          done;
      - name: List files
        run: ls -R ${{ github.event.inputs.repo }}
      - name: Crowdin sync
        uses: crowdin/github-action@v2
        with:
          upload_sources: true
          upload_translations: true
          auto_approve_imported: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CROWDIN_PROJECT_ID: ${{ vars.CROWDIN_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_TOKEN }}
          