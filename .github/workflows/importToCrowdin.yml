name: Import to crowdin

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository name'
        required: false
  workflow_call:
    inputs:
      repo:
        description: 'Repository name'
        type: 'string'
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  importToCrowdin:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v5
      - name: "Set up Python"
        uses: actions/setup-python@v6
        with:
          python-version-file: ".python-version"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Install gettext
        run: |
          sudo apt update
          sudo apt install gettext
      - name: Checkout add-on
        uses: actions/checkout@v5
        with:
          repository: nvdaaddons/${{ inputs.repo }}
          path: addon-${{ inputs.repo }}
          fetch-depth: 0
          ref: stable
      - name: Create dir for repo
        run: |
          if [ -d "${{ inputs.repo }}" ]; then
          echo "Warning: Folder already exists."
          #rm -rf "${{ inputs.repo }}"
          else
          mkdir ${{ inputs.repo }}
          fi
      - name: Create add-on
        run: |
          cd addon-${{ inputs.repo }}
          uv run scons
      - name: Create pot file
        run: |
          cd addon-${{ inputs.repo }}
          uv run scons pot
      - name: Generate xliff
        run: |
          cd addon-${{ inputs.repo }}
          uv run ../utils/markdownTranslate.py generateXliff -m readme.md -o ${{ inputs.repo }}.xliff
      - name: Move files to repo
        run: |
          mv addon-${{ inputs.repo }}/${{ inputs.repo }}.pot ${{ inputs.repo }} -f
          mv addon-${{ inputs.repo }}/${{ inputs.repo }}.xliff ${{ inputs.repo }} -f
          mv addon-${{ inputs.repo }}/readme.md ${{ inputs.repo }} -f
          cd ${{ inputs.repo }}
          mv readme.md ${{ inputs.repo }}.md -f

      - name: Commit and push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add utils
          git add ${{ inputs.repo }}
          git commit -m "Register ${{ inputs.repo }}"
          git branch -u origin/main
          git pull
          git push

      - name: Upload pot to Crowdin
        run: uv run python utils/l10nUtil.py uploadSourceFile --localFilePath=${{ inputs.repo}}/${{ inputs.repo}}.pot
        env:
          crowdinProjectID: ${{ vars.CROWDIN_ID }}
          crowdinAuthToken: ${{ secrets.CROWDIN_TOKEN }}
      - name: Upload xliff to Crowdin
        if: always()
        run: uv run python utils/l10nUtil.py uploadSourceFile --localFilePath=${{ inputs.repo}}/${{ inputs.repo}}.xliff
        env:
          crowdinProjectID: ${{ vars.CROWDIN_ID }}
          crowdinAuthToken: ${{ secrets.CROWDIN_TOKEN }}
      - name: Commit and push
        id: commit
        run: |
          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
          git status
          git add utils
          if git diff --staged --quiet; then
          echo "Nothing added to commit."
          echo "has_changes=false" >> $GITHUB_OUTPUT
          else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          git commit -m "Update Crowdin files"
          git push
          fi
