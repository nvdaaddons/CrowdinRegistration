name: Import to crowdin

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository name'
        required: true

jobs:
  importToCrowdin:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install scons markdown
          sudo apt update
          sudo apt install gettext
          sudo apt install translate-toolkit
      - name: Checkout add-on
        uses: actions/checkout@v4
        with:
          repository: nvdaaddons/${{ github.event.inputs.repo }}
          path: addon
          ref: stable
      - name: Create dir for repo
        run: |
          if [ -d "${{ github.event.inputs.repo }}" ]; then
          echo "Warning: Folder ${{ github.event.inputs.repo }} already exists. It will be removed."
          rm -rf "${{ github.event.inputs.repo }}"
          fi
          mkdir ${{ github.event.inputs.repo }}
      - name: Create add-on
        run: |
          cd addon
          scons
      - name: Create pot file
        run: |
          cd addon
          scons pot
      - name: Move pot file
        run: |
          mv addon/${{ github.event.inputs.repo }}.pot ${{ github.event.inputs.repo }} -f
          cd ${{ github.event.inputs.repo }}
          mv ${{ github.event.inputs.repo }}.pot nvda.pot
      - name: Convert markdown to pot
        run: md2po -P addon/readme.md ${{ github.event.inputs.repo }}
      - name: Move locale to add-on repo folder
        run: |
          if [ -d "addon/addon/locale" ]; then
          cd addon/addon
          mv locale ${{ github.event.inputs.repo }}
                    else
          echo "Warning: Folder addon/addon/locale does not exist."
          fi
      - name: Move doc to add-on repo folder
        run: |
          if [ -d "addon/addon/doc" ]; then
          mv "addon/addon/doc" "${{ github.event.inputs.repo }}"
                    else
          echo "Warning: Folder addon/addon/doc does not exist. Creating folder."
          mkdir -p ${{ github.event.inputs.repo }}/doc
          fi
      - name: Move translated doc
        run: |
          cd ${{ github.event.inputs.repo }}/doc
          for dir in */; do
          dirBasename=$(basename "$dir")
          if [ "$dirBasename" = "en" ] || [ "$dirBasename" = "style.css" ]; then
          continue
          fi
          if [ -f "${{ github.workspace }}/addons/${{ github.event.inputs.repo }}.$dirBasename.po" ]; then
            mv "${{ github.workspace }}/addons/${{ github.event.inputs.repo }}.$dirBasename.po" "$dir" -f
            mv "$dir/${{ github.event.inputs.repo }}.$dirBasename.po" "$dir/readme.po"
          else
            echo "Warning: File addons/${{ github.event.inputs.repo }}.$dirBasename.po does not exist."
          fi
          done

      #- name: Set configuration for add-on repo
        #run: |
          #sed -i'.bak' 's/\(^.*: \"\)\(repo\/\)\(.*$\)/\1${{ github.event.inputs.repo }}\/\3/' crowdin.yml
          #sed -i'.bak' 's/\(^.*\/\)\(repo.po\)\(.*$\)/\1${{ github.event.inputs.repo }}.po\3/' crowdin.yml


      - name: Commit and push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ${{ github.event.inputs.repo }}/*.pot
          git add ${{ github.event.inputs.repo }}/**/*.po
          git commit -m "Register ${{ github.event.inputs.repo }}"
          git branch -u origin/main
          git pull
          git push

      - name: Crowdin sync
        uses: crowdin/github-action@v2
        with:
          upload_sources: true
          upload_translations: true
          source: ${{ github.event.inputs.repo }}/nvda.pot
          translation: ${{ github.event.inputs.repo }}/locale/%two_letters_code%/LC_MESSAGES/nvda.po
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CROWDIN_PROJECT_ID: ${{ vars.CROWDIN_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_TOKEN }}
